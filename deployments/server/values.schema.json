{"$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/$defs/helm-values","$defs":{"helm-values":{"type":"object","properties":{"adminPort":{"$ref":"#/$defs/helm-values.adminPort"},"affinity":{"$ref":"#/$defs/helm-values.affinity"},"allowedOriginHosts":{"$ref":"#/$defs/helm-values.allowedOriginHosts"},"auth":{"$ref":"#/$defs/helm-values.auth"},"certificate":{"$ref":"#/$defs/helm-values.certificate"},"debugLog":{"$ref":"#/$defs/helm-values.debugLog"},"enable":{"$ref":"#/$defs/helm-values.enable"},"fullnameOverride":{"$ref":"#/$defs/helm-values.fullnameOverride"},"global":{"$ref":"#/$defs/helm-values.global"},"httpPort":{"$ref":"#/$defs/helm-values.httpPort"},"image":{"$ref":"#/$defs/helm-values.image"},"nameOverride":{"$ref":"#/$defs/helm-values.nameOverride"},"nodeSelector":{"$ref":"#/$defs/helm-values.nodeSelector"},"podAnnotations":{"$ref":"#/$defs/helm-values.podAnnotations"},"podSecurityContext":{"$ref":"#/$defs/helm-values.podSecurityContext"},"replicaCount":{"$ref":"#/$defs/helm-values.replicaCount"},"resources":{"$ref":"#/$defs/helm-values.resources"},"securityContext":{"$ref":"#/$defs/helm-values.securityContext"},"tls":{"$ref":"#/$defs/helm-values.tls"},"tolerations":{"$ref":"#/$defs/helm-values.tolerations"},"version":{"$ref":"#/$defs/helm-values.version"},"volumeMounts":{"$ref":"#/$defs/helm-values.volumeMounts"},"volumes":{"$ref":"#/$defs/helm-values.volumes"},"workerServiceHttpPort":{"$ref":"#/$defs/helm-values.workerServiceHttpPort"},"workerServiceHttpService":{"$ref":"#/$defs/helm-values.workerServiceHttpService"},"workerServiceTls":{"$ref":"#/$defs/helm-values.workerServiceTls"}},"additionalProperties":false},"helm-values.adminPort":{"description":"The GRPC port number for the admin service.","type":"number","default":8081},"helm-values.affinity":{"description":"A Kubernetes Affinity, if required.\nFor more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node).\n\nFor example:\naffinity:\n  nodeAffinity:\n   requiredDuringSchedulingIgnoredDuringExecution:\n     nodeSelectorTerms:\n     - matchExpressions:\n       - key: foo.bar.com/role\n         operator: In\n         values:\n         - master","type":"object"},"helm-values.allowedOriginHosts":{"type":"array","items":{"$ref":"#/$defs/helm-values.allowedOriginHosts[0]"}},"helm-values.allowedOriginHosts[0]":{"type":"string","default":"localhost"},"helm-values.auth":{"type":"object","properties":{"cacheCleanup":{"$ref":"#/$defs/helm-values.auth.cacheCleanup"},"cacheExpiration":{"$ref":"#/$defs/helm-values.auth.cacheExpiration"},"oidcClientId":{"$ref":"#/$defs/helm-values.auth.oidcClientId"},"oidcClientSecret":{"$ref":"#/$defs/helm-values.auth.oidcClientSecret"}},"additionalProperties":false},"helm-values.auth.cacheCleanup":{"description":"The period for cleaning up the cash.","type":"string","default":"15m"},"helm-values.auth.cacheExpiration":{"description":"The valid period for the caching auth result.","type":"string","default":"1m"},"helm-values.auth.oidcClientId":{"description":"the OIDC client ID.","type":"string","default":"session-manager"},"helm-values.auth.oidcClientSecret":{"description":"the OIDC client secret.","type":"string","default":"o15FQlUB8SeOOBiw3Pg5vD5p"},"helm-values.certificate":{"type":"object","properties":{"create":{"$ref":"#/$defs/helm-values.certificate.create"},"dnsNames":{"$ref":"#/$defs/helm-values.certificate.dnsNames"},"issuerRef":{"$ref":"#/$defs/helm-values.certificate.issuerRef"},"name":{"$ref":"#/$defs/helm-values.certificate.name"}},"additionalProperties":false},"helm-values.certificate.create":{"description":"If enabled, the Certificate resource is created.","type":"boolean","default":false},"helm-values.certificate.dnsNames":{"description":"At least one of commonName (possibly through literalSubject), dnsNames, uris, emailAddresses, ipAddresses or otherNames is required.","type":"array","items":{}},"helm-values.certificate.issuerRef":{"type":"object","properties":{"kind":{"$ref":"#/$defs/helm-values.certificate.issuerRef.kind"},"name":{"$ref":"#/$defs/helm-values.certificate.issuerRef.name"}},"additionalProperties":false},"helm-values.certificate.issuerRef.kind":{"description":"We can reference ClusterIssuers by changing the kind here. The default value is Issuer (i.e. a locally namespaced Issuer)","type":"string","default":"ClusterIssuer"},"helm-values.certificate.issuerRef.name":{"description":"The identifier of the issuer.","type":"string"},"helm-values.certificate.name":{"description":"The Certificate name.","type":"string","default":"session-tls"},"helm-values.debugLog":{"description":"If enabled, show the debugging logs of the session-manager-server.","type":"boolean","default":false},"helm-values.enable":{"description":"This field can be used as a condition when using it as a dependency. This definition is only here as a placeholder such that it is included in the json schema.","type":"boolean"},"helm-values.fullnameOverride":{"description":"Override the \"session-manager-server.fullname\" value. This value is used as part of most of the names of the resources created by this Helm chart.","type":"string"},"helm-values.global":{"description":"Global values shared across all (sub)charts","type":"object","properties":{"auth":{"$ref":"#/$defs/helm-values.global.auth"},"ingress":{"$ref":"#/$defs/helm-values.global.ingress"}}},"helm-values.global.auth":{"type":"object","properties":{"dexServerAddr":{"$ref":"#/$defs/helm-values.global.auth.dexServerAddr"},"enable":{"$ref":"#/$defs/helm-values.global.auth.enable"},"rbacInternalServerAddr":{"$ref":"#/$defs/helm-values.global.auth.rbacInternalServerAddr"}}},"helm-values.global.auth.dexServerAddr":{"description":"The address for the dex-server to use verify token.","type":"string","default":"dex-server-http:5556"},"helm-values.global.auth.enable":{"description":"The flag to enable auth.","type":"boolean","default":true},"helm-values.global.auth.rbacInternalServerAddr":{"description":"The address for the rbac-server to use API auth.","type":"string","default":"rbac-server-internal-grpc:8082"},"helm-values.global.ingress":{"type":"object","properties":{"annotations":{"$ref":"#/$defs/helm-values.global.ingress.annotations"},"controllerUrl":{"$ref":"#/$defs/helm-values.global.ingress.controllerUrl"},"ingressClassName":{"$ref":"#/$defs/helm-values.global.ingress.ingressClassName"},"tls":{"$ref":"#/$defs/helm-values.global.ingress.tls"}}},"helm-values.global.ingress.annotations":{"description":"Optional additional annotations to add to the Ingress.","type":"object"},"helm-values.global.ingress.controllerUrl":{"description":"The URL of the ingress controller that can be accessed from outside the Kubernetes cluster. The session-manager-server use this for the auth token issuer and redirect URL.","type":"string","default":"http://localhost:8080"},"helm-values.global.ingress.ingressClassName":{"description":"The Ingress class name.","type":"string","default":"kong"},"helm-values.global.ingress.tls":{"description":"If specified, the API accessed via Ingress will be enabled for TLS. For more information, see [Enable TLS](https://llmariner.ai/docs/setup/install/single_cluster_production/#optional-enable-tls).\n\nFor example:\ntls:\n  hosts:\n  - api.llm.mydomain.com\n  secretName: api-tls","type":"object"},"helm-values.httpPort":{"description":"The HTTP port number for the public service.","type":"number","default":8080},"helm-values.image":{"type":"object","properties":{"pullPolicy":{"$ref":"#/$defs/helm-values.image.pullPolicy"},"repository":{"$ref":"#/$defs/helm-values.image.repository"}},"additionalProperties":false},"helm-values.image.pullPolicy":{"description":"Kubernetes imagePullPolicy on Deployment.","type":"string","default":"IfNotPresent"},"helm-values.image.repository":{"description":"The container image name.","type":"string","default":"public.ecr.aws/cloudnatix/llmariner/session-manager-server"},"helm-values.nameOverride":{"description":"Override the \"session-manager-server.name\" value, which is used to annotate some of the resources that are created by this Chart (using \"app.kubernetes.io/name\").","type":"string"},"helm-values.nodeSelector":{"description":"The nodeSelector on Pods tells Kubernetes to schedule Pods on the nodes with matching labels. For more information, see [Assigning Pods to Nodes](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/).","type":"object"},"helm-values.podAnnotations":{"description":"Optional additional annotations to add to the Deployment Pods.","type":"object"},"helm-values.podSecurityContext":{"description":"Security Context for the session-manager-server pod. For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).","type":"object","default":{"fsGroup":2000}},"helm-values.replicaCount":{"description":"The number of replicas for the session-manager-server Deployment.","type":"number","default":1},"helm-values.resources":{"description":"Resources to provide to the session-manager-server pod. For more information, see [Resource Management for Pods and Containers](https://kubernetes.io/docs/concepts/configuration/manage-resources-Containers/).\n\nFor example:\nrequests:\n  cpu: 10m\n  memory: 32Mi","type":"object","default":{"limits":{"cpu":"250m"},"requests":{"cpu":"250m","memory":"500Mi"}}},"helm-values.securityContext":{"description":"Security Context for the session-manager-server container. For more information, see [Configure a Security Context for a Pod or Container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/).","type":"object","default":{"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":1000}},"helm-values.tls":{"type":"object","properties":{"enable":{"$ref":"#/$defs/helm-values.tls.enable"},"secretName":{"$ref":"#/$defs/helm-values.tls.secretName"}},"additionalProperties":false},"helm-values.tls.enable":{"type":"boolean","default":false},"helm-values.tls.secretName":{"type":"string","default":""},"helm-values.tolerations":{"description":"A list of Kubernetes Tolerations, if required.\nFor more information, see [Taints and Tolerations](https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/).\n\nFor example:\ntolerations:\n- key: foo.bar.com/role\n  operator: Equal\n  value: master\n  effect: NoSchedule","type":"array","items":{}},"helm-values.version":{"description":"Override the container image tag to deploy by setting this variable. If no value is set, the chart's appVersion will be used.","type":"string"},"helm-values.volumeMounts":{"description":"Additional volume mounts to add to the session-manager-server container. For more information, see [Volumes](https://kubernetes.io/docs/concepts/storage/volumes/).","type":"array","items":{}},"helm-values.volumes":{"description":"Additional volumes to add to the session-manager-server pod. For more information, see [Volumes](https://kubernetes.io/docs/concepts/storage/volumes/).","type":"array","items":{}},"helm-values.workerServiceHttpPort":{"description":"The HTTP port number for the worker service.","type":"number","default":8082},"helm-values.workerServiceHttpService":{"type":"object","properties":{"annotations":{"$ref":"#/$defs/helm-values.workerServiceHttpService.annotations"},"externalTrafficPolicy":{"$ref":"#/$defs/helm-values.workerServiceHttpService.externalTrafficPolicy"},"loadBalancerSourceRanges":{"$ref":"#/$defs/helm-values.workerServiceHttpService.loadBalancerSourceRanges"},"nodePort":{"$ref":"#/$defs/helm-values.workerServiceHttpService.nodePort"},"port":{"$ref":"#/$defs/helm-values.workerServiceHttpService.port"},"type":{"$ref":"#/$defs/helm-values.workerServiceHttpService.type"}},"additionalProperties":false},"helm-values.workerServiceHttpService.annotations":{"description":"Optional annotations to add to the worker Service.","type":"object"},"helm-values.workerServiceHttpService.externalTrafficPolicy":{"description":"Specify the policy to control how traffic from external sources is routed.","type":"string"},"helm-values.workerServiceHttpService.loadBalancerSourceRanges":{"description":"Optional firewall rules to only allow certain source ranges. NOTE: This field will be ignored if the cloud-provider does not support the feature.","type":"array","items":{}},"helm-values.workerServiceHttpService.nodePort":{"description":"Optional node port number. If not specified, Kubernetes will allocate a port from a range. (default: 30000-32767) NOTE: This value is only available only when the Service type is `NodePort`.","type":"number"},"helm-values.workerServiceHttpService.port":{"description":"The number of HTTP incoming port.","type":"number","default":8082},"helm-values.workerServiceHttpService.type":{"description":"The Service type.","type":"string","default":"ClusterIP"},"helm-values.workerServiceTls":{"type":"object","properties":{"enable":{"$ref":"#/$defs/helm-values.workerServiceTls.enable"},"secretName":{"$ref":"#/$defs/helm-values.workerServiceTls.secretName"}},"additionalProperties":false},"helm-values.workerServiceTls.enable":{"description":"If enabled, communicate with workers over TLS.","type":"boolean","default":false},"helm-values.workerServiceTls.secretName":{"description":"The secret name that is mounted to the pod.","type":"string","default":"session-tls"}}}
